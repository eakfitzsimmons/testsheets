dplyr::filter(include == TRUE)  # discard rows where "include" is FALSE, and then discard include column
View(sheet)
add_quotes <- function(string) {
paste0("\"", string, "\"")
}
dplyr::mutate_if(is.character, add_quotes)
sheet <- googlesheets4::read_sheet(spreadsheet, sheet=sheet_name) %>%
dplyr::select(-starts_with("user_")) %>%  # discard user column
dplyr::filter(include == TRUE)  # discard rows where "include" is FALSE, and then discard include column
load_all()
sheet <- googlesheets4::read_sheet(spreadsheet, sheet=sheet_name) %>%
dplyr::select(-starts_with("user_")) %>%  # discard user column
dplyr::filter(include == TRUE)  # discard rows where "include" is FALSE, and then discard include column
View(sheet)
char <- dplyr::select_if(sheet, is.character)
char <- dplyr::mutate_if(char, add_quotes)
add_quotes <- function(string) {
paste0("\"", string, "\"")
}
char <- dplyr::mutate_if(char, add_quotes)
char <- dplyr::mutate_if(char, add_quotes)
char <- dplyr::mutate_if(char, is.character, add_quotes)
print(char)
char <- dplyr::mutate_if(sheet, is.character, add_quotes)
View(char)
sheet <- googlesheets4::read_sheet(spreadsheet, sheet=sheet_name) %>%
dplyr::select(-starts_with("user_")) %>%  # discard user column
dplyr::filter(include == TRUE)  # discard rows where "include" is FALSE, and then discard include column
View(sheet)
sheet <- dplyr::mutate_if(sheet, is.character, add_quotes)
View(sheet)
sheet <- googlesheets4::read_sheet(spreadsheet, sheet=sheet_name) %>%
dplyr::select(-starts_with("user_")) %>%  # discard user column
dplyr::mutate_if(is.character, add_quotes)
sheet <- googlesheets4::read_sheet(spreadsheet, sheet=sheet_name) %>%
dplyr::select(-starts_with("user_")) %>%  # discard user column
dplyr::mutate_if(is.character, ~ paste0("\"", . , "\""))
load_all()
---
# connect to google drive
drive_token <- googledrive::drive_auth()
googlesheets4::sheets_auth(token=googledrive::drive_token())
# file name in Google Drive
file_name <- "Testing Database"
mime_type <- googledrive::drive_mime_type("spreadsheet")
# get and verify spreadsheet
spreadsheet <- googledrive::drive_find(file_name, type=mime_type)
sheet_name <- "powerTtest"
write_testsheet(sheet)
sheet <- googlesheets4::read_sheet(spreadsheet, sheet=sheet_name)
sheet <- sheet %>%
dplyr::select(-starts_with("user_")) %>%  # discard user column
dplyr::mutate_if(is.character, ~ paste0("\"", . , "\""))
View(sheet)
sheet <- sheet %>%
dplyr::select(-starts_with("user_")) %>%  # discard user column
dplyr::mutate_if(is.character, ~ paste0("\"", . , "\"")) %>%
dplyr::filter(include == TRUE)  # discard rows where "include" is FALSE, and then discard include column
sheet <- sheet %>%
dplyr::select(-starts_with("user_")) %>%  # discard user column
dplyr::mutate_if(is.character, ~ paste0("\"", . , "\"")) %>%
dplyr::filter(include == TRUE)  # discard rows where "include" is FALSE, and then discard include column
sheet <- googlesheets4::read_sheet(spreadsheet, sheet=sheet_name)
sheet <- sheet %>%
dplyr::select(-starts_with("user_")) %>%  # discard user column
dplyr::mutate_if(is.character, ~ paste0("\"", . , "\"")) %>%
dplyr::filter(include == TRUE)  # discard rows where "include" is FALSE, and then discard include column
View(sheet)
sheet <- googlesheets4::read_sheet(spreadsheet, sheet=sheet_name)
sheet <- sheet %>%
dplyr::filter(include == TRUE) %>%  # discard rows where "include" is FALSE, and then discard include column
dplyr::select(-starts_with("user_")) %>%  # discard user column
dplyr::mutate_if(is.character, ~ paste0("\"", . , "\""))
View(sheet)
source('~/Repos/nicole-brewer-github/testsheets/superpower_example.R', echo=TRUE)
source('~/Repos/nicole-brewer-github/testsheets/superpower_example.R', echo=TRUE)
---
# connect to google drive
drive_token <- googledrive::drive_auth()
googlesheets4::sheets_auth(token=googledrive::drive_token())
# file name in Google Drive
file_name <- "Testing Database"
mime_type <- googledrive::drive_mime_type("spreadsheet")
# get and verify spreadsheet
spreadsheet <- googledrive::drive_find(file_name, type=mime_type)
sheet_name <- "powerTtest"
write_testsheet(sheet)
write_testsheet(spreadsheet, sheet_name)
sheet <- googlesheets4::read_sheet(spreadsheet, sheet=sheet_name)
sheet <- sheet %>%
dplyr::filter(include == TRUE) %>%  # discard rows where "include" is FALSE, and then discard include column
dplyr::select(-starts_with("user_")) %>%  # discard user column
dplyr::mutate_if(is.character, ~ paste0("\"", . , "\""))
read_testsheet_i <- function(spreadsheet, sheet_name) {
sheet <- googlesheets4::read_sheet(spreadsheet, sheet=sheet_name)
sheet <- sheet %>%
dplyr::filter(include == TRUE) %>%  # discard rows where "include" is FALSE, and then discard include column
dplyr::select(-starts_with("user_")) %>%  # discard user column
dplyr::mutate_if(is.character, ~ paste0("\"", . , "\""))
}
write_testsheet(spreadsheet, sheet_name)
load_all()
# get and verify spreadsheet
spreadsheet <- googledrive::drive_find(file_name, type=mime_type)
sheet_name <- "powerTtest"
write_testsheet(spreadsheet, sheet_name)
build(vignettes=FALSE)
devtools::check()
library(magrittr)
devtools::check()
googlesheets4::sheets_has_token()
use_template(
"testsheets.R",
save_as = path("tests", "testsheets.R"),
data = list(name = project_name())
)
check_installed("testsheets")
if (!is_installed("testsheets")) {
ui_stop("Package {ui_value(pkg)} required. Please install before re-trying.")
}
check_installed <- function(pkg) {
if (!is_installed(pkg)) {
ui_stop("Package {ui_value(pkg)} required. Please install before re-trying.")
}
}
is_installed <- function(pkg) {
requireNamespace(pkg, quietly = TRUE)
}
check_installed("testsheets")
if (is_package()) {
use_dependency("testthat", "Suggests")
}
is_package <- function(base_path = proj_get()) {
res <- tryCatch(
rprojroot::find_package_root_file(path = base_path),
error = function(e) NULL
)
!is.null(res)
}
if (is_package()) {
use_dependency("testthat", "Suggests")
}
load_all()
load_all()
load_all()
use_testsheets()
project_name()
load_all()
project_name()
load_all()
use_testsheets()
load_all()
use_testsheets()
googledrive::as_dribble()
# list of character vectors
sheetnames <- list()
print(list)
print(sheetnames)
list()
list(a=1, b=2)
sum()
sheetnames <- vector("list")
print(sheetnames)
sheetnames <- vector("list", 0)
print(sheetnames)
typeof(sheetnames)
getwd()
use_directory("testsheets", "just-a-test")
getwd()
use_directory(fs::path("tests", "testthat"))
use_directory(fs::path("tests", "testtht"))
use_testthat()
load(testsheets)
load_all()
use_testsheets()
googledrive
library("googledrive")
googledrive
googledrive::as_dribble()
load_all()
ui_info(x, .envir = parent.frame())
ui_info("string")
ui_done("string")
ui_nope("string")
ui_nope("string")
ui_oops("string")
ui_stop("string")
ui_todo("string")
ui_value("string")
ui_warn("string")
ui_stop("string")
load_all()
use_testsheets()
load_all()
use_testsheets()
load_all()
use_testsheets()
load_all()
use_testsheets()
check()
check(vignettes=FALSE)
check(vignettes=FALSE)
check(vignettes=FALSE, test=FALSE)
check(vignette=FALSE, run_dont_test = TRUE)
load_all()
use_testsheets()
utils::packageVersion("testthat")
load_all()
utils::packageVersion("testthat")
use_testsheets()
# create an empty dribble
spreadsheets <- googledrive::as_dribble()
load_all()
use_testsheets()
load_all()
use_testsheets()
load_all()
use_testsheets()
load_all()
use_testsheets()
load_all()
use_testsheets()
load_all()
load_all()
use_testsheets()
usethis::use_package(rlang)
install.packages(rlang)
install.packages("rlang")
install.packages("rlang")
usethis::use_package("rlang")
load_all()
devtools::load_all
devtools::load_all()
testsheets::use_testsheets()
devtools::load_all()
testsheets::use_testsheets()
devtools::loaded_packages()
devtools::load_all()
devtools::loaded_packages()
devtools::reload()
devtools::loaded_packages()
devtools::check()
devtools::check(run_dont_test = TRUE, vignette=FALSE
)
devtools::loaded_packages()
devtools::reload()
devtools::loaded_packages()
rm(list = ls(all.names = TRUE))
devtools::loaded_packages()
usethis::use_vignette("testsheets")
devtools::build_vignettes()
devtools::check(vignette=FALSE)
devtools::check(vignettes=FALSE)
usethis::use_test("blank")
devtools::check(vignettes=FALSE)
devtools::build()
devtools::build(vignettes = FALSE)
usethis::edit_r_buildignore("project")
devtools::build(vignettes = FALSE)
devtools::build(vignettes = FALSE)
devtools::check(vignettes=FALSE)
# add_spreadsheets
# get_spreadsheets
# remove_spreadsheet
# remove_spreadsheet
paths <- c(sheets = fs::path("tests", ".sheets.rda"), spreadsheets = fs::path("tests", ".spreadsheets.rda"))
paths
class(paths)
is.list(paths)
is.array(paths)
is.vector(paths)
paths$sheets
paths[[sheets]]
paths[["sheets"]]
date()
# create an empty dribble
spreadsheets <- googledrive::as_dribble()
# empty list for sheet names
sheets <- new_sheets()
load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::load_all()
sheets()
devtools::load_all()
sheets()
x <- NULL
devtools::load_all()
devtools::load_all()
devtools::load_all()
sheets()
tbl <- tibble::tibble()
tbl
class(tbl)
character()
character("hi")
character(c("hi"))
devtools::load_all()
s <- sheets()
s
library(devtools)
load_all()
print(sheets())
devtools::install_github("r-lib/pillar")
pillar
pillar::pillar_shaft(sheets())
s <- sheets()
print(s)
load_all()
print(s)
pillar::pillar_shaft(sheets())
dplyr::add_row(s, c("example", "someid", "example", date())
)
print(sheets)
print(sheets())
s <- sheets()
pillar::colonnade(s)
pillar::colonnade(s, width=width(s))
pillar::colonnade(s, width=length(s))
length(s)
---
# connect to google drive
drive_token <- googledrive::drive_auth()
googlesheets4::sheets_auth(token=googledrive::drive_token())
# file name in Google Drive
file_name <- "Testing Database"
mime_type <- googledrive::drive_mime_type("spreadsheet")
# get and verify spreadsheet
spreadsheet <- googledrive::drive_find(file_name, type=mime_type)
load_all()
load_all()
add_spreadsheet(spreadsheet)
load_all()
add_spreadsheet(spreadsheet)
load_all()
add_spreadsheet(spreadsheet)
print(read_spreadsheets())
d <- googledrive::confirm_dribble(read_spreadsheets())
d <- googledrive::as_dribble()
d
double()
numeric()
ss
spreadsheet$id
# check for existing sheet
preexisting <- dplyr::filter(sheets, sheet_name = sheet_name)
sheets
s
s <- read_sheets()
s
sheets()
print(sheets())
length(s)
googlesheets4::sheets_sheet_names(ss)
googlesheets4::sheets_sheet_names(spreadsheet)
load_all()
load_all()
add_sheet(sheet_name, spreadsheet)
# get and verify spreadsheet
spreadsheet <- googledrive::drive_find(file_name, type=mime_type)
sheet_name <- "powerTtest"
add_sheet(sheet_name, spreadsheet)
load_all()
add_sheet(sheet_name, spreadsheet)
load_all()
load_all()
add_sheet(sheet_name, spreadsheet)
s <- sheets()
print(s)
load_all()
s <- sheets()
print(s)
save_sheets(s)
add_sheet(sheet_name, spreadsheet)
load_all()
s <- sheets()
print(s)
save_sheets(s)
add_sheet(sheet_name, spreadsheet)
load_all()
s <- sheets()
print(s)
save_sheets(s)
add_sheet(sheet_name, spreadsheet)
load_all()
save_sheets(s)
add_sheet(sheet_name, spreadsheet)
load_all()
add_sheet(sheet_name, spreadsheet)
load_all()
add_sheet(sheet_name, spreadsheet)
spreadsheet$id
load_all()
add_sheet(sheet_name, spreadsheet)
load_all()
add_sheet(sheet_name, spreadsheet)
load_all()
add_sheet(sheet_name, spreadsheet)
load_all()
add_sheet(sheet_name, spreadsheet)
load_all()
add_sheet(sheet_name, spreadsheet)
load_all()
add_sheet(sheet_name, spreadsheet)
load_all()
add_sheet(sheet_name, spreadsheet)
load_all()
print_sheets()
load_all()
add_sheet(sheet_name, spreadsheet)
load_all()
add_sheet(sheet_name, spreadsheet)
load_all()
add_sheet(sheet_name, spreadsheet)
load_all()
add_sheet(sheet_name, spreadsheet)
load_all()
add_sheet(sheet_name, spreadsheet)
print_sheets()
load_all()
load_all()
print_sheets()
load_all()
load_all()
print_spreadsheets()
load_all()
update()
load_all()
update()
load_all()
update()
getwd()
update()
load_all()
update()
load_all()
update()
check(vignettes=FALSE)
check(vignettes=FALSE)
usethis::use_package("rprojroot")
install.packages("rprojroot")
install.packages("rprojroot")
check(vignettes=FALSE)
library(devtools)
check(vignettes=FALSE)
check(vignettes=FALSE)
check(vignettes=FALSE)
usethis::use_pkgdown()
pillar::colonnade(sheets)
s <- sheets()
load_all()
s <- sheets()
# get and verify spreadsheet
spreadsheet <- googledrive::drive_find(file_name, type=mime_type)
sheet_name <- "powerTtest"
s <- sheets()
print(s)
sheets <- sheets %>% dplyr::select(-ss_id)
sheets()
sheets <- sheets %>% dplyr::select(-ss_id)
devtools::install_git()
s <-  sheets()
load_all()
s <-  sheets()
print(s)
class(s)
load_all()
s <-  sheets()
load_all()
s <-  sheets()
load_all()
s <-  sheets()
print(s)
load_all()
print(s)
s <-  sheets()
print(s)
load_all()
s <-  sheets()
print(s)
load_all()
print(s)
load_all()
print(s)
print(s)
load_all()
print(s)
load_all()
print(s)
load_all()
print(s)
load_all()
print(s)
load_all()
print(s)
check()
check(vignettes=FALSE
)
check(vignettes=FALSE)
usethis::use_pipe()
devtools::document()
usethis::use_pipe()
devtools::document()
check(vignettes=FALSE)
usethis::use_testthat
usethis::use_testthat()
usethis::use_test()
usethis::use_test()
check(vignettes=FALSE)
check(vignettes=FALSE)
check(vignettes=FALSE)
